#autoline 10,10

PROC InitialisePlayfield()

LET %x=50
LET %y=150
LET %h=16: REM Height/width of sprites
LET %a=0: REM Current frame of animation
LET %d=0: REM Direction - 0=right; 1=left
let %u=0: REM Flying? 0=false, walking; 1=true, flying 
LET %k=4: REM Number of keyframes of animation
LET %s=1: REM Number of pixels to move each time

LET %f=0: REM Fuel x position
LET %g=0: REM Fuel y position
LET %p=0: REM Power-up x position
LET %q=0: REM Power-up y position
LET %b=190: REM Ship x position
LET %c=0: REM Ship y position

let %e=192: Rem Ground level for sprites

LET fuelCarry=0

REM Game states - TODO add power-ups (e.g. radioactive)
LET gameState=0
DIM s(14)
DIM o(14)
o(1)=21
o(2)=22
o(3)=23
o(4)=20

REM 0 = ship part 1
REM 1 = ship part 2
REM 2 = ship part 3
REM 3 = fuel 1
REM 4 = drop fuel 1 over ship
REM 5 = ship fuel 1
REM 6 = fuel 2
REM 7 = ship fuel 2
REM 8 = fuel 3
REM 9 = ship fuel 3
REM 10 = fuel 4
REM 11 = ship fuel 4
REM 12 = fuel 5
REM 13 = ship fuel 5
REM 14 = fuel 6
REM 15 = ship fuel 6

REM Sprites - order is important for relative sprites
REM 0 = Jetman top
REM 1 = Jetman bottom (relative to Jetman top)
REM 2 = Fuel (relative when picked-up)
REM 10 = Jetman wrap-around top
REM 11 = Jetman wrap-around bottom
REM 20 = Ship 1, bottom
REM 21 = Ship 1, middle
REM 22 = Ship 1, top
REM 30 = Platform 1, sprite 1
REM 31 = Platform 1, sprite 2
REM 32 = Platform 1, sprite 3
REM 33 = Platform 2, sprite 1
REM 34 = Platform 2, sprite 2
REM 35 = Platform 3, sprite 1
REM 36 = Platform 3, sprite 2
REM 37 = Platform 3, sprite 3

PROC SetupLevel()

REM Game loop
REPEAT
    LET %o=%u*(k*2): REM This is the pattern offset to the next Sprite
    LET %z=%d*8+1: REM Work out the correct sprite flags (rotation based on left or right direction) 

    REM Display Jetman (either walking or flying)
    REM Top of Jetman is the anchor sprite, a composite sprite so that the Fuel sprite is not rotated when Jetman changes direction
    SPRITE 0,%x,%y,%a+o,%z,0
    REM Bottom of Jetman, relative sprite
    REM SPRITE 1,%x,%y+h,%a+o+1,%z
    SPRITE -1,0,%h,1,%z,2 

    REM Jetman left to right wrap around
    IF %x < 32 THEN PROC WrapLeft()
    REM Jetman right to left wrap around
    IF %x > 273 THEN PROC WrapRight()

    REM Debug print
    REM PRINT AT 0,0; "x "; %x; " y: "; %y; "   "
    PRINT AT 0,15; "gameState "; gameState; "   "

    REM carry out actions relating to the current game state
    PROC stateAction()

    REM check for sprite collisions using SPRITE OVER
    REM check if Jetman has hit a platform. Print statements for debug
    IF % SPRITE OVER (0,30 TO 37) THEN PROC HitPlatform(): ELSE PRINT AT 0,0;"     "

    REM check if Jetman has touched the spaceship
    IF % SPRITE OVER (0,20 TO 22) THEN PROC HitShip(): ELSE PRINT AT 0,0;"     "

    REM check if Jetman has touched the fuel
    IF % SPRITE OVER (0,2) THEN PROC HitFuel(): ELSE PRINT AT 0,0;"     "

    REM Check keypresses
    IF % IN 57342& BIN 0000010 =0 THEN LET %x=%x-s: PROC MoveLeft()
    IF % IN 57342& BIN 0000001 =0 THEN LET %x=%x+s: PROC MoveRight()
    IF % IN 32766& BIN 0000001 =0 THEN LET %y=%y-s: PROC FlyUp(): ELSE PROC FlyDown()

    SPRITE MOVE

REPEAT UNTIL INKEY$ ="q"
STOP

DEFPROC stateAction()
    IF gameState=0 THEN SPRITE 20,%b,%c,22,1: SPRITE CONTINUE 20,%b,%c TO %e STEP 1 RUN ,22,2,0,0: LET gameState=1: ENDPROC
    IF gameState=1 THEN IF % SPRITE AT (20,1)=e THEN LET gameState=2: ENDPROC
    IF gameState=2 THEN SPRITE 21,%b,%c,23,1: SPRITE CONTINUE 21,%b,%c TO %e-16 STEP 1 RUN ,23,2,0,0: LET gameState=3: ENDPROC
    IF gameState=3 THEN IF % SPRITE AT (21,1)=(e-16) THEN LET gameState=4: ENDPROC
    IF gameState=4 THEN SPRITE 22,%b,%c,24,1: SPRITE CONTINUE 22,%b,%c TO %e-32 STEP 1 RUN ,24,2,0,0: LET gameState=5: ENDPROC
    IF gameState=5 THEN IF % SPRITE AT (22,1)=(e-32) THEN LET gameState=6: ENDPROC
    IF gameState=6 THEN PROC DropFuel(): LET gameState=18: ENDPROC
    REM When gameState is 7 we're waiting for Jetman to drop the fuel over the ship, gameState is then incremented in HitShip()
    IF gameState=8 THEN PROC DropFuel(): ENDPROC
    REM When gameState is 9 we're waiting for Jetman to drop the fuel over the ship, gameState is then incremented in HitShip()
    IF gameState=10 THEN PROC DropFuel(): ENDPROC
    REM When gameState is 11 we're waiting for Jetman to drop the fuel over the ship, gameState is then incremented in HitShip()
    IF gameState=12 THEN PROC DropFuel(): ENDPROC
    REM When gameState is 13 we're waiting for Jetman to drop the fuel over the ship, gameState is then incremented in HitShip()
    IF gameState=14 THEN PROC DropFuel(): ENDPROC
    REM When gameState is 15 we're waiting for Jetman to drop the fuel over the ship, gameState is then incremented in HitShip()
    IF gameState=16 THEN PROC DropFuel(): ENDPROC
    REM When gameState is 17 we're waiting for Jetman to drop the fuel over the ship, gameState is then incremented in HitShip()
    REM Ship take off. TODO: make ship flash!
    IF gameState=18 THEN PROC TakeOff(): ENDPROC
    rem When ship is off the screen, it's the end of the level!
    IF gameState=19 THEN IF % SPRITE AT (20,1)=0 THEN LET gameState=20: ENDPROC

ENDPROC

DEFPROC SetupLevel()
    LET %i=0: REM First ship fuel pattern
ENDPROC

DEFPROC MoveLeft()
    IF %d=0 THEN LET %d=1
    LET %a=%a+2
    IF %a=k THEN LET %a=0
ENDPROC

DEFPROC MoveRight()
    IF %d=1 THEN LET %d=0
    LET %a=%a+2
    IF %a=k THEN LET %a=0
ENDPROC

DEFPROC WrapLeft()
    REM TODO change to anchor and relative sprites
    SPRITE 10,%x+256,%y,%a+o,%z: SPRITE 11,%x+256,%y+h,%a+o+1,%z
    REM Hide duplicate sprite when Jetman completes transition from left to right
    IF %x < 16 THEN SPRITE 10,%x+256,%y,%a+o,0: SPRITE 11,%x+256,%y+h,%a+o+1,0: LET %x=%x+256
ENDPROC

DEFPROC WrapRight()
    REM TODO change to anchor and relative sprites
    SPRITE 10,%x-273+16,%y,%a+o,%z: SPRITE 11,%x-273+16,%y+h,%a+o+1,%z
    REM Hide duplicate sprite when Jetman completes transition from right to left
    IF %x > 289 THEN SPRITE 10,%x-273+16,%y,%a+o,0: SPRITE 11,%x-273+16,%y+h,%a+o+1,0: LET %x=%x-289+32
ENDPROC

DEFPROC FlyUp()
    %u = 1
ENDPROC

DEFPROC FlyDown()
    IF %u THEN LET %y=%y+1
    IF %y>=(192-6) THEN LET %u=0
ENDPROC

DEFPROC InitialisePlayfield()
    LOAD "jetman.spr" BANK 16,0,16383
    SPRITE BANK 16
    SPRITE CLEAR
    SPRITE BORDER 0
    SPRITE PRINT 1
    SPRITE STOP
    BORDER 0

    LOCAL x
    LOCAL y
    REM Position platform 1
    LET x=60: LET y=90
    SPRITE 30,x,y,16,1
    SPRITE 31,x+16,y,17,1
    SPRITE 32,x+32,y,18,1

    REM Position platform 2
    LET x=150: LET y=120
    SPRITE 33,x,y,19,1
    SPRITE 34,x+16,y,20,1

    REM Position platform 3
    LET x=220: LET y=75
    SPRITE 35,x,y,16,1
    SPRITE 36,x+16,y,17,1
    SPRITE 37,x+32,y,18,1
ENDPROC

DEFPROC HitPlatform()
    PRINT AT 0,0;"Bash!"
ENDPROC

DEFPROC HitShip()
    LOCAL %s: LET %s=%i / 2
    LOCAL %p: LET %p=%i+25
    IF gameState > 5 THEN PRINT AT 0,0;"Bosh! Offset:";%s
    IF fuelCarry=1 THEN SPRITE %s+20,%b,%e-(16*s),%p,1: SPRITE 2,0,0,21,0: LET fuelCarry=0: LET %i=%i+1: LET gameState=gameState+1
ENDPROC

DEFPROC HitFuel()
    PRINT AT 0,0;"Boom!"
    REM Stop the fuel falling (even it it's already stopped) and make it relative to Jetman
    SPRITE CONTINUE 2,,STOP,21
    SPRITE -2,0,10,21,1,0
    fuelCarry=1
ENDPROC

DEFPROC DropFuel()
    LET %f=40
    SPRITE 2,%f,%g,21,1
    SPRITE CONTINUE 2,%f,%g TO %e STEP 1 RUN ,21,2,0,0
    LET gameState=gameState+1
ENDPROC

DEFPROC TakeOff()
    SPRITE CONTINUE 20,%b,%c TO %e STEP -1 RUN ,,BIN 00000011
    SPRITE CONTINUE 21,%b,%c TO %e-16 STEP -1 RUN ,,BIN 00000011
    SPRITE CONTINUE 22,%b,%c TO %e-32 STEP -1 RUN ,,BIN 00000011
    LET gameState=gameState+1


ENDPROC

DEFPROC CollideActions()
    print at 1, 0; "collided"
ENDPROC




