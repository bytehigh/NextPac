#autoline 10,10

RUN AT 3
PROC InitialisePlayfield()

%h=16: ;Height/width of sprites
%a=0: ;Current frame of animation
%d=0: ;Direction - 0=right; 1=left
%u=0: ;Flying? 0=false, walking; 1=true, flying 
%k=4: ;Number of keyframes of animation
%s=4: ;Number of pixels to move each time

%f=0: ;Fuel x position
%g=0: ;Fuel y position
%p=0: ;Power-up x position
%q=0: ;Power-up y position
%b=190: ;Ship x position
%c=0: ;Ship y position

%e=200: ;Ground level for sprites

%x=50: ;Initial Jetman X position
%y=194: ;Initial Jetman Y position

fuelCarry=0
alien=0

REM Game states - TODO add power-ups (e.g. radioactive)
gameState=0
DIM s(14)
DIM o(14)
o(1)=21
o(2)=22
o(3)=23
o(4)=20

REM 0 = ship part 1
REM 1 = ship part 2
REM 2 = ship part 3
REM 3 = fuel 1
REM 4 = drop fuel 1 over ship
REM 5 = ship fuel 1
REM 6 = fuel 2
REM 7 = ship fuel 2
REM 8 = fuel 3
REM 9 = ship fuel 3
REM 10 = fuel 4
REM 11 = ship fuel 4
REM 12 = fuel 5
REM 13 = ship fuel 5
REM 14 = fuel 6
REM 15 = ship fuel 6

REM Sprites - order is important for relative sprites
REM 0 = Jetman top
REM 1 = Jetman bottom (relative to Jetman top)
REM 2 = Fuel (relative when picked-up)
REM 5 = Alien
REM 10 = Jetman wrap-around top
REM 11 = Jetman wrap-around bottom
REM 20 = Ship 1, bottom
REM 21 = Ship 1, middle
REM 22 = Ship 1, top
REM 16 = Platform 1, sprite 1
REM 17 = Platform 1, sprite 2
REM 18 = Platform 1, sprite 3
REM 33 = Platform 2, sprite 1
REM 34 = Platform 2, sprite 2
REM 35 = Platform 3, sprite 1
REM 36 = Platform 3, sprite 2
REM 37 = Platform 3, sprite 3

PROC SetupLevel()

REM Game loop
REPEAT
    %o=%u*(k*2): REM This is the pattern offset to the next Sprite
    %z=%d*8+1: REM Work out the correct sprite flags (rotation based on left or right direction) 

    REM Display Jetman (either walking or flying)
    REM Top of Jetman is the anchor sprite, a composite sprite so that the Fuel sprite is not rotated when Jetman changes direction
    SPRITE 0,%x,%y,%a+o,%z,0
    REM Bottom of Jetman, relative sprite
    REM SPRITE 1,%x,%y+h,%a+o+1,%z
    SPRITE -1,0,%h,1,%z,2 

    PROC Aliens()

    REM Jetman left to right wrap around
    IF %x < 32 THEN PROC WrapLeft()
    REM Jetman right to left wrap around
    IF %x > 273 THEN PROC WrapRight()

    REM Debug print
    REM PRINT AT 0,0; "x "; %x; " y: "; %y; "   "
    REM PRINT AT 2,0;"fuelCarry is ";fuelCarry
    PRINT AT 0,15; "gameState "; gameState; "   "

    REM carry out actions relating to the current game state
    PROC stateAction()

    REM check if Alien has hit a platform. Print statements for debug
    hitPlatform=% SPRITE OVER (5,30 TO 37)
    IF hitPlatform THEN PROC PlatformCrash(hitPlatform)

    REM check if Jetman has flown over or touched the spaceship
    %t=fuelCarry
    IF % SPRITE OVER (0,20 TO 22) THEN PROC JetManHitShip(): ELSE IF %x=b AND t=1 THEN PROC DropFuel(%x,%y): fuelCarry=2

    REM check if Jetman has touched the fuel
    %t=fuelCarry
    IF %t=0 AND SPRITE OVER (0,2) THEN PROC HitFuel()

    REM check if Jetman has hit a platform. Print statements for debug
    %z=% SPRITE OVER (0,30 TO 37)
    PRINT AT 4,0;%z
    IF %z=0 THEN PRINT AT 4,4;"!": ELSE PRINT AT 4,4;" "

    REM Check keypresses
    IF % IN 57342& BIN 0000010 =0 THEN IF %z=0 THEN PROC MoveLeft()
REM : ELSE IF %z > 0 THEN %x=%x+(s*2)
    IF % IN 57342& BIN 0000001 =0 THEN IF %z=0 THEN PROC MoveRight()
REM : ELSE IF %z > 0 THEN %x=%x-(s*2)

rem    IF % IN 57342& BIN 0000001 =0 THEN PROC MoveRight(): ELSE IF %z > 0 THEN %x=%x-(s*2)
    rem IF % IN 32766& BIN 0000001 =0 THEN %y=%y-s: PROC FlyUp(): ELSE PROC FlyDown()
    IF % IN 32766& BIN 0000001 =0 THEN PROC FlyUp(): ELSE IF %y+16 > SPRITE AT (z,1) THEN PROC FlyDown()



    SPRITE MOVE

REPEAT UNTIL INKEY$ ="q"
STOP

DEFPROC stateAction()
    %f=40

    IF gameState=0 THEN SPRITE 20,%b,%c,22,1: SPRITE CONTINUE 20,%b,%c TO %e STEP 1 RUN ,22,2,0,0:gameState=1: ENDPROC
    IF gameState=1 THEN IF % SPRITE AT (20,1)=e THEN gameState=2: ENDPROC
    IF gameState=2 THEN SPRITE 21,%b,%c,23,1: SPRITE CONTINUE 21,%b,%c TO %e-16 STEP 1 RUN ,23,2,0,0: gameState=3: ENDPROC
    IF gameState=3 THEN IF % SPRITE AT (21,1)=(e-16) THEN gameState=4: ENDPROC
    IF gameState=4 THEN SPRITE 22,%b,%c,24,1: SPRITE CONTINUE 22,%b,%c TO %e-32 STEP 1 RUN ,24,2,0,0: gameState=5: ENDPROC
    IF gameState=5 THEN IF % SPRITE AT (22,1)=(e-32) THEN gameState=6: ENDPROC
    IF gameState=6 THEN PROC DropFuel(%f,%g):gameState=gameState+1: ENDPROC
    REM When gameState is 7 we're waiting for Jetman to drop the fuel over the ship, gameState is then incremented in HitShip()
    IF gameState=7 AND fuelCarry=2 THEN IF % SPRITE OVER (2,20 TO 22) THEN PROC FuelHitShip()
    IF gameState=8 AND fuelCarry <> 2 THEN PROC DropFuel(%f,%g):gameState=gameState+1: ENDPROC
    REM When gameState is 9 we're waiting for Jetman to drop the fuel over the ship, gameState is then incremented in HitShip()
    IF gameState=9 AND fuelCarry=2 THEN IF % SPRITE OVER (2,20 TO 22) THEN PROC FuelHitShip()
    IF gameState=10 THEN PROC DropFuel(%f,%g):gameState=gameState+1: ENDPROC
    REM When gameState is 11 we're waiting for Jetman to drop the fuel over the ship, gameState is then incremented in HitShip()
    IF gameState=11 AND fuelCarry=2 THEN IF % SPRITE OVER (2,20 TO 22) THEN PROC FuelHitShip()
    IF gameState=12 THEN PROC DropFuel(%f,%g):gameState=gameState+1: ENDPROC
    REM When gameState is 13 we're waiting for Jetman to drop the fuel over the ship, gameState is then incremented in HitShip()
    IF gameState=13 AND fuelCarry=2 THEN IF % SPRITE OVER (2,20 TO 22) THEN PROC FuelHitShip()
    IF gameState=14 THEN PROC DropFuel(%f,%g):gameState=gameState+1: ENDPROC
    REM When gameState is 15 we're waiting for Jetman to drop the fuel over the ship, gameState is then incremented in HitShip()
    IF gameState=15 AND fuelCarry=2 THEN IF % SPRITE OVER (2,20 TO 22) THEN PROC FuelHitShip()
    IF gameState=16 THEN PROC DropFuel(%f,%g):gameState=gameState+1: ENDPROC
    REM When gameState is 17 we're waiting for Jetman to drop the fuel over the ship, gameState is then incremented in HitShip()
    IF gameState=17 AND fuelCarry=2 THEN IF % SPRITE OVER (2,20 TO 22) THEN PROC FuelHitShip()
    REM Ship take off. TODO: make ship flash!
    IF gameState=18 THEN PROC TakeOff(): ENDPROC
    REM When ship is off the screen, it's the end of the level!
    IF gameState=19 THEN IF % SPRITE AT (20,1)=0 THEN gameState=20: ENDPROC

ENDPROC

DEFPROC SetupLevel()
    %i=0: ; First ship fuel pattern
ENDPROC

DEFPROC MoveLeft()
    %x=%x-s

    IF %d=0 THEN %d=1
    %a=%a+2
    IF %a=k THEN %a=0
ENDPROC

DEFPROC MoveRight()
    %x=%x+s

    IF %d=1 THEN %d=0
    %a=%a+2
    IF %a=k THEN %a=0
ENDPROC

DEFPROC WrapLeft()
    REM TODO change to anchor and relative sprites
    SPRITE 10,%x+256,%y,%a+o,%z: SPRITE 11,%x+256,%y+h,%a+o+1,%z
    REM Hide duplicate sprite when Jetman completes transition from left to right
    IF %x < 16 THEN SPRITE 10,%x+256,%y,%a+o,0: SPRITE 11,%x+256,%y+h,%a+o+1,0: %x=%x+256
ENDPROC

DEFPROC WrapRight()
    REM TODO change to anchor and relative sprites
    SPRITE 10,%x-273+16,%y,%a+o,%z: SPRITE 11,%x-273+16,%y+h,%a+o+1,%z
    REM Hide duplicate sprite when Jetman completes transition from right to left
    IF %x > 289 THEN SPRITE 10,%x-273+16,%y,%a+o,0: SPRITE 11,%x-273+16,%y+h,%a+o+1,0: %x=%x-289+32
ENDPROC

DEFPROC FlyUp()
    %y=%y-s 
    %u=1
    IF %y <= 32 THEN %y=32
ENDPROC

DEFPROC FlyDown()
    IF %u THEN %y=%y+s
    IF %y>=(e-6) THEN %u=0: %y=%e-6
ENDPROC

DEFPROC InitialisePlayfield()
    LAYER 2,1
    BORDER 0
    PAPER 0
    INK 7
    CLS

    LOAD "jetman.spr" BANK 16,0,16383
    SPRITE BANK 16
    SPRITE CLEAR
    SPRITE BORDER 0
    SPRITE PRINT 1
    SPRITE STOP

    LOAD "jetpac.map" BANK 17:; tile map
    TILE BANK 16:; point tilemap to spritesheet
    TILE DIM 17,0,16,16:; using tile bank 14, offset 0, tile 16 wide, tile size 16
    TILE 16,12: ; print tile for 16x12

    LOCAL x
    LOCAL y
    REM Position platform 1 [Sprites 30-32]
    x=60: y=90
    SPRITE 30,x,y,16,1
    SPRITE 31,x+16,y,17,1
    SPRITE 32,x+32,y,18,1

    REM Position platform 2 [Sprites 33-34]
    x=150: y=120
    SPRITE 33,x,y,19,1
    SPRITE 34,x+16,y,20,1

    REM Position platform 3 [Sprites 35-37]
    x=220: y=75
    SPRITE 35,x,y,16,1
    SPRITE 36,x+16,y,17,1
    SPRITE 37,x+32,y,18,1
ENDPROC

DEFPROC Aliens()
rem    IF alienDeath THEN sprite continue 5,,
    IF alien=1 THEN ENDPROC

    SPRITE 5,16,40,31,1
    SPRITE CONTINUE 5,16 TO 304 STEP 1 RUN ,40 TO 192 STEP 1 RUN ,31 TO 32,2,1,0
    alien=1
ENDPROC

DEFPROC PlatformHit()
    PRINT AT 0,0;"Bash!"
ENDPROC

REM Alien hits platform and explodes
DEFPROC PlatformCrash(platform)
    PRINT AT 0,0;"KERANNGGG!"
    alienDeath=1
ENDPROC

DEFPROC JetManHitShip()
    REM Only carry on if the fuel is dropping
    IF fuelCarry <> 1 THEN ENDPROC

    REM Sprite is the ship pattern
    LOCAL %s:%s=%i/2
    LOCAL %p:%p=%i+25

    REM If Jetman is carrying the fuel switch to the ship sprite with fuel in it and hide the fuel
    SPRITE %s+20,%b,%e-(16*s),%p,1
    SPRITE 2,0,0,21,0
    fuelCarry=0
    %i=%i+1
    gameState=gameState+1
ENDPROC

DEFPROC FuelHitShip()
    REM Only carry on if the fuel is dropping over the spaceship
    IF fuelCarry <> 2 THEN ENDPROC

    REM Sprite is the ship pattern
    LOCAL %s:%s=%i/2
    LOCAL %p:%p=%i+25

    REM Switch to the ship sprite with fuel in it and hide the fuel
    SPRITE %s+20,%b,%e-(16*s),%p,1
    SPRITE 2,0,0,21,0
    fuelCarry=0
    %i=%i+1
    gameState=gameState+1
ENDPROC

DEFPROC HitFuel()
    PRINT AT 0,0;"Boom!"
    REM Stop the fuel falling (even it it's already stopped) and make it relative to Jetman
    SPRITE CONTINUE 2,,STOP,21
    SPRITE -2,0,10,21,1,0
    fuelCarry=1
ENDPROC

DEFPROC DropFuel(%x,%y)
    IF fuelCarry=2 THEN ENDPROC

    SPRITE 2,%x,%y,21,1
    SPRITE CONTINUE 2,%x,%y TO %e STEP 1 RUN ,21,2,0,0
ENDPROC

DEFPROC TakeOff()
    SPRITE CONTINUE 20,%b,%c TO %e STEP -1 RUN ,,BIN 00000011
    SPRITE CONTINUE 21,%b,%c TO %e-16 STEP -1 RUN ,,BIN 00000011
    SPRITE CONTINUE 22,%b,%c TO %e-32 STEP -1 RUN ,,BIN 00000011
    gameState=gameState+1
ENDPROC

DEFPROC CollideActions()
    PRINT AT 1,0;"collided"
ENDPROC
